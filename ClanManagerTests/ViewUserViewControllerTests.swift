//
//  ViewUserViewControllerTests.swift
//  ClanManager
//
//  Created by Jeffrey Wu on 2017-01-13.
//  Copyright (c) 2017 Cheeseonhead. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

@testable import ClanManager
import XCTest

class ViewUserViewControllerTests: XCTestCase
{
  // MARK: - Subject under test
  
  var sut: ViewUserViewController!
  var window: UIWindow!
  
  // MARK: - Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    window = UIWindow()
    setupViewUserViewController()
  }
  
  override func tearDown()
  {
    window = nil
    super.tearDown()
  }
  
  // MARK: - Test setup
  
  func setupViewUserViewController()
  {
    let bundle = Bundle.main
    let storyboard = UIStoryboard(name: "Main", bundle: bundle)
    sut = storyboard.instantiateViewController(withIdentifier: "ViewUserViewController") as! ViewUserViewController
  }
  
  func loadView()
  {
    window.addSubview(sut.view)
    RunLoop.current.run(until: Date())
  }
  
  // MARK: - Test doubles
  
  // MARK: - Tests
  
  func testFetchUserCalledOnViewLoad()
  {
    // Given
    let viewUserControllerSpy = ViewUserViewControllerSpy()
    sut.output = viewUserControllerSpy
    
    // When
    loadView()
    
    // Then
    XCTAssertTrue(viewUserControllerSpy.fetchUserCalled, "Fetch user should be called on view load")
  }
}


class ViewUserViewControllerSpy : ViewUserViewControllerOutput
{
    fileprivate var fetchUserCalled = false
    
    func fetchUser(request: ViewUser_FetchUser_Request) {
        fetchUserCalled = true
    }
}
