//
//  ViewUserViewControllerTests.swift
//  ClanManager
//
//  Created by Jeffrey Wu on 2017-01-13.
//  Copyright (c) 2017 Cheeseonhead. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

@testable import ClanManager
import XCTest
import Quick
import Nimble

class ViewUserViewControllerTests: QuickSpec
{
    override func spec()
    {
        var viewController: ViewUserViewController!
        var outputSpy: OutputSpy!
        var window: UIWindow!

        beforeEach
        {
            window = UIWindow()
            outputSpy = OutputSpy()
            viewController = self.createViewController()
            viewController.output = outputSpy

            self.loadView(window: window, viewController: viewController)
        }

        describe("Event Load")
        {
            it("should have dispatched a request to output")
            {
                expect(outputSpy.fetchUserCalled).to(beTrue())
            }
        }
    }

    func createViewController() -> ViewUserViewController
    {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "ViewUserController", bundle: bundle)
        return storyboard.instantiateViewController(withIdentifier: "ViewUserViewController") as! ViewUserViewController
    }

    func loadView(window: UIWindow, viewController: UIViewController)
    {
        window.addSubview(viewController.view)
        RunLoop.current.run(until: Date())
    }
}

fileprivate class OutputSpy: ViewUserViewControllerOutput
{
    fileprivate var fetchUserCalled = false

    func fetchUser(request _: ViewUser.FetchUser.Request)
    {
        fetchUserCalled = true
    }
}
