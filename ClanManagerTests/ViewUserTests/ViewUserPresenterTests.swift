//
//  ViewUserPresenterTests.swift
//  ClanManager
//
//  Created by Jeffrey Wu on 2017-01-13.
//  Copyright (c) 2017 Cheeseonhead. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

@testable import ClanManager
import XCTest

class ViewUserPresenterTests: XCTestCase
{
    // MARK: - Subject under test

    var presenter: ViewUserPresenter!

    // MARK: - Test lifecycle

    override func setUp()
    {
        super.setUp()
        setupViewUserPresenter()
    }

    // MARK: - Test setup

    func setupViewUserPresenter()
    {
        presenter = ViewUserPresenter()
    }

    // MARK: - Tests

    func testPresentUserTriggersDisplayUser()
    {
        // Given
        let outputSpy = ViewUserPresenterOutputSpy()
        presenter.output = outputSpy

        // When
        presenter.presentUser(response: ViewUser.FetchUser.Response())

        // Then
        XCTAssertTrue(outputSpy.displayUserCalled, "Should trigger display user on the output")
    }
}

fileprivate class ViewUserPresenterOutputSpy: ViewUserPresenterOutput
{
    var displayUserCalled = false

    func displayUser(viewModel _: ViewUser.FetchUser.ViewModel)
    {
        displayUserCalled = true
    }
}
