//
//  TabControlConfigurator.swift
//  ClanManager
//
//  Created by Jeffrey Wu on 2017-01-22.
//  Copyright (c) 2017 Cheeseonhead. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//

import UIKit

// MARK: Connect View, Interactor, and Presenter

class TabControlConfigurator
{
    // MARK: Object lifecycle

    static let sharedInstance = TabControlConfigurator()

    private init() {}

    // MARK: Configuration

    func configure(viewController: TabControlViewController)
    {

        let presenter = TabControlPresenter()
        presenter.output = viewController

        let interactor = TabControlInteractor()
        interactor.output = presenter

        let router = TabControlRouter(viewController: viewController, dataSource: interactor, dataDestination: interactor)

        viewController.output = interactor
        viewController.router = router
    }
}

extension TabControlInteractor: TabControlViewControllerOutput, TabControlRouterDataProvider, TabControlRouterDataReceiver {}

extension TabControlPresenter: TabControlInteractorOutput {}

extension TabControlRouter: TabControlViewControllerRouter {}

extension TabControlViewController: TabControlPresenterOutput
{

    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        router.passDataToNextScene(for: segue)
    }
}
